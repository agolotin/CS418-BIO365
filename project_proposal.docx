Artem Golotin
BIO365
09/18/2015
Project Proposal

The problem I would like to solve in the project is a very prominent one the world of bioinformatics and computational biology: gene sequence alignment. It is identified as a way to arrange sequences of DNA, RNA and proteins to identify regions of similarity between sequences which may correspond to functional, structural or evolutionary similarities between sequences and organisms. 

As noted above, the problem of gene sequence alignment is a very important one in the world of biological sciences. Ever since the next-generation sequencing became widely available to the research community one of the best ways of identifying structural and functional differences in genes and proteins between various genotypes was multiple sequence alignment. Even though there is a wide array of sequence alignment software that is available nowadays to biologists all over the world, as a part of learning experience and my own (as well as some of the members of my group) preparation for graduate school, it would be beneficial for us to implement one of the dynamic programming approaches to multiple sequence alignment.

To be more specific, the algorithm that in my opinion is worth implementing is the one described by Altschul and Ericson in their 1986 paper “Significance of Nucleotide Sequence Alignments: A Method for Random Sequence Permutation That Preserves Dinucleotide and Codon Usage.” The reason being is that apart from sequence alignment algorithms developed earlier the algorithm described by Altschul and Ericson takes into the account the fact that natural nucleotide sequences are statistically non-random and, the cost of aligning certain triplets of nucleotides, especially in an already processed mRNA will differ from triplet to triplet. Even though the algorithm described in the Altschul's and Ericson's paper is technically a graph algorithm that forces using the divide-and-conquer approach to solving it, in my opinion, it is not an impossible task to convert their algorithm to utilize dynamic programming.

The reason I think such an approach will be beneficial for our learning experience is because it will force us to rethink the structure of an algorithm since we will have to convert a graph-based algorithm to an optimization-type algorithm. If we succeed in our implementation the sequence alignment will be both very accurate and fairly optimal since Altschul's and Ericson's approach is still utilized in various sequence alignment software.
